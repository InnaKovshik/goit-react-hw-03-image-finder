{"version":3,"sources":["components/Loader/Loader.js","components/Searchbar/Searchbar.js","components/CloseBtn/CloseBtn.js","components/images/image.jpg","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGellery/ImageGallery.js","apiPixabi/apiPixabi.js","components/Modal/Modal.js","components/Button/Button.js","App.js","index.js"],"names":["LoaderComponent","type","color","height","width","className","Searchbar","state","queryValue","handleSearchQuery","e","setState","target","value","heandleSendValue","preventDefault","props","onSendQuery","onClick","this","autoComplete","autoFocus","placeholder","onChange","Component","protoType","PropTypes","func","CloseBtn","handleClickBtn","id","onClickBtn","isRequired","ImageGalleryItem","image","onImageClick","useState","hover","setHover","webformatURL","largeImageURL","tags","onMouseOver","onMouseLeave","src","srcSet","alt","srcset","defaultProps","images","defaultImage","arrayOf","exact","string","ImageGallery","map","array","elementType","axios","defaults","baseURL","params","key","image_type","orientation","per_page","fetchImages","q","page","get","then","res","data","hits","propTypes","queryResult","number","Modal","handleEscClick","code","toggleModal","handleOverlayClick","currentTarget","window","addEventListener","removeEventListener","children","Button","App","imageUrl","modalStatus","loaderStatus","error","scrollToBottom","viewPortHeight","document","documentElement","clientWidth","scrollBy","options","prevState","length","catch","finally","handleQuery","query","alert","openModal","url","deleteImg","imageId","filteredImages","filter","console","log","prevProps","renderBtn","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9544a774.chunk.js","sourcesContent":["import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst LoaderComponent = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Circles\"\r\n      color=\" #3f51b5\"\r\n      height={100}\r\n      width={100}\r\n      className=\"Loader\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoaderComponent;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    queryValue: '',\r\n  };\r\n\r\n  handleSearchQuery = e => {\r\n    this.setState({ queryValue: e.target.value });\r\n  };\r\n\r\n  heandleSendValue = e => {\r\n    e.preventDefault();\r\n    if (this.state.queryValue !== '') {\r\n      this.props.onSendQuery(this.state.queryValue);\r\n      this.setState({ queryValue: '' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"SearchForm-button\"\r\n            onClick={this.heandleSendValue}\r\n          >\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            value={this.state.queryValue}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleSearchQuery}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.protoType = {\r\n  heandleSendValue: PropTypes.func,\r\n  handleSearchQuery: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst CloseBtn = ({ handleClickBtn, className, id }) => {\r\n  return (\r\n    <button className={className} onClick={handleClickBtn} id={id}>\r\n      X\r\n    </button>\r\n  );\r\n};\r\n\r\nCloseBtn.protoType = {\r\n  onClickBtn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CloseBtn;\r\n","export default __webpack_public_path__ + \"static/media/image.c05431f6.jpg\";","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nimport CloseBtn from '../CloseBtn';\r\n\r\nimport defaultImage from '../images/image.jpg';\r\n\r\nconst ImageGalleryItem = ({ image, onImageClick, handleClickBtn }) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const { webformatURL, largeImageURL, id, tags } = image;\r\n\r\n  const handleClick = e => {\r\n    onImageClick(e.target.srcset);\r\n  };\r\n\r\n  const handleClickDelBtn = e => {\r\n    handleClickBtn(e.target.id);\r\n  };\r\n\r\n  const showBtn = () => {\r\n    setHover(true);\r\n  };\r\n\r\n  const hideBtn = () => {\r\n    setHover(false);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      className=\"ImageGalleryItem\"\r\n      key={id}\r\n      id={id}\r\n      onMouseOver={showBtn}\r\n      onMouseLeave={hideBtn}\r\n    >\r\n      <div className=\"ImgGallery-overlay\">\r\n        <img\r\n          src={webformatURL}\r\n          srcSet={largeImageURL}\r\n          alt={tags}\r\n          className=\"ImageGalleryItem-image\"\r\n          onClick={handleClick}\r\n        />\r\n        {hover && (\r\n          <CloseBtn\r\n            className=\"close_modal_btn\"\r\n            id={id}\r\n            handleClickBtn={handleClickDelBtn}\r\n          />\r\n        )}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.defaultProps = {\r\n  images: [],\r\n  src: defaultImage,\r\n  srcSet: defaultImage,\r\n  alt: 'photo',\r\n};\r\n\r\nImageGalleryItem.protoType = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      src: PropTypes.string.isRequired,\r\n      srcSet: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, onImageClick, handleClickBtn }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          image={image}\r\n          onImageClick={onImageClick}\r\n          handleClickBtn={handleClickBtn}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.protoType = {\r\n  images: PropTypes.array.isRequired,\r\n  onImageClick: PropTypes.func.isRequired,\r\n  ImageGalleryItem: PropTypes.elementType.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '19831402-766c30a230adf7d2aaf6df8e0';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  key: API_KEY,\r\n  image_type: 'photo',\r\n  orientation: 'horizontal',\r\n  per_page: 12,\r\n};\r\n\r\nconst fetchImages = ({ q, page = 1 }) => {\r\n  return axios.get('', { params: { q, page } }).then(res => res.data.hits);\r\n};\r\n\r\nfetchImages.propTypes = {\r\n  queryResult: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default fetchImages;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleEscClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleEscClick);\r\n  }\r\n\r\n  handleEscClick = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.toggleModal();\r\n    }\r\n  };\r\n\r\n  handleOverlayClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.toggleModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleOverlayClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.protoType = {\r\n  handleEscClick: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClickBtn }) => {\r\n  return (\r\n    <button className=\"Button\" onClick={onClickBtn}>\r\n      Load more...\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.protoType = {\r\n  onClickBtn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\n\r\nimport Loader from './components/Loader';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGellery';\r\nimport fetchImages from './apiPixabi/apiPixabi';\r\nimport Modal from './components/Modal';\r\nimport Button from './components/Button';\r\nimport CloseBtn from './components/CloseBtn';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    queryResult: '',\r\n    images: [],\r\n    page: 1,\r\n    imageUrl: '',\r\n    modalStatus: false,\r\n    loaderStatus: false,\r\n    error: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.queryResult !== this.state.queryResult) {\r\n      this.fetchImages();\r\n    }\r\n\r\n    if (this.state.images.length > 12) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    let viewPortHeight = document.documentElement.clientWidth;\r\n    window.scrollBy(0, viewPortHeight);\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ modalStatus }) => ({\r\n      modalStatus: !modalStatus,\r\n    }));\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { queryResult, page } = this.state;\r\n    const q = queryResult;\r\n    const options = { q, page };\r\n    this.setState(prevState => ({\r\n      page: prevState.page + 1,\r\n      loaderStatus: true,\r\n    }));\r\n\r\n    fetchImages(options)\r\n      .then(images => {\r\n        if (images.length > 0) {\r\n          this.setState(prevState => ({\r\n            images: [...prevState.images, ...images],\r\n          }));\r\n        } else {\r\n          this.setState({ error: true });\r\n        }\r\n      })\r\n      .catch(() => this.setState({ error: true }))\r\n      .finally(() => this.setState({ loaderStatus: false }));\r\n  };\r\n\r\n  handleQuery = query => {\r\n    if (query !== this.state.queryResult) {\r\n      this.setState({ queryResult: query, page: 1, images: [], error: false });\r\n    } else {\r\n      alert('this request has already been completed');\r\n    }\r\n  };\r\n\r\n  openModal = url => {\r\n    this.setState({\r\n      imageUrl: url,\r\n    });\r\n    this.toggleModal();\r\n  };\r\n\r\n  deleteImg = imageId => {\r\n    const filteredImages = this.state.images.filter(({ id }) => id != imageId);\r\n    console.log('filteredImages', filteredImages);\r\n\r\n    this.setState({ images: filteredImages });\r\n  };\r\n\r\n  render() {\r\n    const { images, imageUrl, modalStatus, loaderStatus, error } = this.state;\r\n    const renderBtn = images.length !== 0 && !loaderStatus;\r\n\r\n    return (\r\n      <div className=\"Container\">\r\n        <Searchbar onSendQuery={this.handleQuery} />\r\n        {error && <h2 className=\"ErrorMessage\">No result found!</h2>}\r\n        {images.length > 0 && (\r\n          <ImageGallery\r\n            images={images}\r\n            onImageClick={this.openModal}\r\n            handleClickBtn={this.deleteImg}\r\n          />\r\n        )}\r\n        {loaderStatus && <Loader />}\r\n        {renderBtn && (\r\n          <Button\r\n            type=\"button\"\r\n            onClickBtn={this.fetchImages}\r\n            className=\"Button\"\r\n          />\r\n        )}\r\n        {!!modalStatus && (\r\n          <Modal toggleModal={this.toggleModal}>\r\n            <div className=\"modal\">\r\n              <img src={imageUrl} alt=\"pic\" className=\"modal_img\" />\r\n              <CloseBtn\r\n                handleClickBtn={this.openModal}\r\n                id={imageUrl}\r\n                className=\"close_modal_btn\"\r\n              />\r\n              {/* <button className=\"close_modal_btn\" onClick={this.openModal}>x</button> */}\r\n            </div>\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\nimport 'modern-normalize/modern-normalize.css';\r\n//import style from './components/'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n//reportWebVitals();\r\n"],"sourceRoot":""}